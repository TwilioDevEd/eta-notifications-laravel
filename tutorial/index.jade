.chapter(data-title='Setting Up The Application')
  .step(
    data-title='What Are We Building?',
    data-file='app/Http/routes.php')
    :markdown
      ## What Are We Building?

      ![ETA Notifications](http://howtodocs.s3.amazonaws.com/eta-notifications.png)

      There are a wide range of businesses that work delivering all kinds of
      services or products at the houses of their customers.

      In our case, we'll build a system for a laundry store, that will allow the
      user to notify their clients about the ETA of his or her clothes using Twilio
      Client API.

      ---

      **See Also:**
      * [Twilio SMS and MMS PHP Quickstart](//www.twilio.com/docs/quickstart/php/sms)

  .step(
    data-title="Customer's notifications",
    data-file='app/Http/Controllers/OrderController.php'
    data-highlight='21-49')
    :markdown
      ## Customer's Notifications

      This screen shows a couple of buttons that allow the laundry delivery
      person to send out notifications. There are two cases we'd like to handle:

      1. Send a notification when the laundry delivery person picked up the
         clothes, so the client will receive a SMS with the ETA of their
         clothes.
      1. Send a notification when the clothes have arrived to their destination.

      Now, we're going to rely on the Twilio API Client to actually send out the
      notifications.

  .step(
    data-title='Creating a Twilio API Client',
    data-file='app/Providers/TwilioRestClientProvider.php',
    data-highlight='15-20')
    :markdown
      ## Creating a Twilio REST API Client

      Here we create an authenticated Twilio REST API client that we can use
      anytime we need to send a text message.We initialize it with our
      [Twilio Account Credentials](//www.twilio.com/user/account/messaging/dashboard)
      stored as environment variables.

      ---

      **See Also:**
      * [Twilio Rest Client - Send SMS](//www.twilio.com/docs/quickstart/php/sms/sending-via-rest)
      * [Laravel Service Providers](//laravel.com/docs/master/providers)

  .step(
    data-title='Handling the Notification Request',
    data-file='app/Http/Controllers/OrderController.php',
    data-highlight='51-62')
    :markdown
      ## Handling the Notification Request

      In `OrderController` we extract the phone number stored in each order,
      and then simply send an SMS message with the specified body.

      Now the client has the information about when their clothes will
      arrive at his or her home.

  .step
    :markdown
      ## Where to next?

      That's it! We've just implemented an application to instantly route leads
      to sales people using text messages.
      
      If you are a PHP developer working with Twilio,  you might want
      to check out these other tutorials:

      [**Click-To-Call**](//www.twilio.com/docs/howto/walkthrough/click-to-call/php/laravel)

      Put a button on your web page that connects visitors to live support or sales people via telephone.

      [**Automated Survey**](https://www.twilio.com/docs/howto/walkthrough/automated-survey/php/laravel)

      Instantly collect structured data from your users with a survey conducted
      over a voice call or SMS text messages.

      ## Did this help?

      Thanks for checking out this tutorial! If you have any feedback to share
      with us, we'd love to hear it. Tweet
      [@twilio](http://twitter.com/twilio) to let us know what you think.
